CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

PROJECT(com)

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

SET(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "C:/boost_1_57_0")
SET(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} "D:/boost_1_54_0")

SET(PROJECT_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/src)

INCLUDE_DIRECTORIES(../protocol/cpp_include)
INCLUDE_DIRECTORIES(../protocol/cpp_out)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE})

FIND_PACKAGE(Boost)
FIND_PACKAGE(Threads)
IF (Boost_FOUND)
	INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
	LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})
ENDIF()

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
LINK_DIRECTORIES(/usr/local/lib/)
LINK_DIRECTORIES($HOME/protobuf/lib/)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Werror")

ADD_SUBDIRECTORY(../protocol ${CMAKE_CURRENT_BINARY_DIR}/protocol)
ADD_SUBDIRECTORY(src)

IF(${CMAKE_PROJECT_NAME} STREQUAL com)
	ADD_SUBDIRECTORY(test)

	ENABLE_TESTING()
	ADD_TEST(NAME com_convert_test COMMAND com_convert_test)
	#ADD_TEST(NAME client_test COMMAND client_test)
	#ADD_TEST(NAME scheduler_test COMMAND scheduler_test)
	#ADD_TEST(NAME server_test COMMAND server_test)
ENDIF()

